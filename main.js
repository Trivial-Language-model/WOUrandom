let markovChain = {};
let typingIntervalId = null;
let isCooling = false;

document.addEventListener('DOMContentLoaded', () => {
  const generateButton = document.getElementById('generateButton');
  const output = document.getElementById('output');

  // ËæûÊõ∏„Éá„Éº„Çø
  const rawText = `
„Åì„Çå -> „ÅØ
„ÅØ -> „Çè„Åü„Åó Âêõ Â≤©ÊòÜËô´
„Çè„Åü„Åó -> „ÅÆ „ÅØ
„ÅÆ -> Âè™ ÈÅøÈõ£Ë®ìÁ∑¥ „Å´ ÂêçÂâç
Âè™ -> „ÅÆ
ÈÅøÈõ£Ë®ìÁ∑¥ -> „Å†
„Å† -> „Çà „Çà‚Ä¶
„ÇÑ„ÇÅ„Çç -> „Å®
„Å® -> Âø†Âëä„Åó
Âø†Âëä„Åó -> „Åü
„Åü -> „ÅÆ „Çì
„Å´ -> „Å™
È†ÜÁï™ -> „ÅØ
Âêõ -> „Åã„Çâ
„Åã„Çâ -> Ê≠ª„Å¨
Â≤©ÊòÜËô´ -> „ÅÆ
ÂêçÂâç -> „Çí
„Çí -> Ë®Ä„Å£
Ë®Ä„Å£ -> „Åü
„Çì -> „Å†
`;

  buildMarkovChainFromText(rawText);

  // „ÄåËøΩË∑°„Åô„Çã„Äç„Éú„Çø„É≥ÔºàgenerateButtonÔºâÊäº‰∏ãÊôÇ„ÅÆÊåôÂãï
  generateButton.addEventListener('click', () => {
    if (isCooling) return;

    const charA = document.getElementById('charA');
    const charB = document.getElementById('charB');

    // B „ÅåÈÅ∏Êäû„Åï„Çå„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÅØÊñáÁ´†ÁîüÊàê„ÇíË°å„Çè„Åö emoji „ÅÆ„ÅøË°®Á§∫
    if (charB && charB.checked) {
      // „ÇØ„Éº„É´„Çø„Ç§„É†ÈñãÂßã
      setCoolingState(true, generateButton);

      // Êó¢Â≠ò„ÅÆË°®Á§∫‰∏≠ interval „Çí„ÇØ„É™„Ç¢
      if (typingIntervalId !== null) {
        clearInterval(typingIntervalId);
        typingIntervalId = null;
      }

      // üëøü¶éüçÇ „ÇíË°®Á§∫ÔºàÊó¢Â≠ò„ÅÆÊñáÂ≠óÈÄÅ„Çä„Å®Âêå„ÅòÊåôÂãïÔºâ
      output.textContent = '';
      showTextSlowly('üëøü¶éüçÇ', 80, output, () => {
        setCoolingState(false, generateButton);
      });
      return;
    }

    // A „ÅåÈÅ∏Êäû„Åï„Çå„Å¶„ÅÑ„Çã„ÅãÊú™ÈÅ∏Êäû„ÅÆÂ†¥Âêà„ÅÆÈñãÂßãË™ûÈÅ∏Êäû
    let startWords;
    if (charA && charA.checked) {
      startWords = ["„Åì„Çå", "„Çè„Åü„Åó"];
    } else {
      startWords = ["„Åì„Çå", "„ÇÑ„ÇÅ„Çç", "È†ÜÁï™", "„Çè„Åü„Åó"];
    }

    const sentence = generateText(50, startWords);

    // „Éú„Çø„É≥„ÇíÁÑ°ÂäπÂåñÔºà„ÇØ„Éº„É´„Çø„Ç§„É†ÈñãÂßãÔºâ
    setCoolingState(true, generateButton);

    // Êó¢Â≠ò„ÅÆË°®Á§∫‰∏≠ interval „Çí„ÇØ„É™„Ç¢„Åó„Å¶„Åã„ÇâÊñ∞„Åó„ÅÑË°®Á§∫„ÇíÈñãÂßã
    if (typingIntervalId !== null) {
      clearInterval(typingIntervalId);
      typingIntervalId = null;
    }

    // Ë°®Á§∫ÂÆå‰∫ÜÊôÇ„Å´„Ç≥„Éº„É´„Éê„ÉÉ„ÇØ„Åß„Éú„Çø„É≥„ÇíÂæ©Ê¥ª„Åï„Åõ„Çã
    showTextSlowly(sentence, 80, output, () => {
      setCoolingState(false, generateButton);
    });
  });
});

function buildMarkovChainFromText(text) {
  markovChain = {};
  const lines = text.trim().split('\n');
  for (let line of lines) {
    line = line.trim();
    if (line === '' || !line.includes('->')) continue;
    const [key, values] = line.split('->').map(part => part.trim());
    const nextWords = values.split(/\s+/).filter(w => w !== '');
    if (!markovChain[key]) markovChain[key] = [];
    markovChain[key].push(...nextWords);
  }
}

function generateText(length = 50, startWords = ["„Åì„Çå", "„ÇÑ„ÇÅ„Çç", "È†ÜÁï™", "„Çè„Åü„Åó"]) {
  let current = startWords[Math.floor(Math.random() * startWords.length)];
  let result = [current];
  for (let i = 0; i < length; i++) {
    const nextWords = markovChain[current];
    if (!nextWords || nextWords.length === 0) break;
    current = nextWords[Math.floor(Math.random() * nextWords.length)];
    result.push(current);
  }
  return result.join('');
}

/**
 * showTextSlowly(text, speed, outputElement, onComplete)
 * - onComplete „ÅØÂÖ®„ÉÜ„Ç≠„Çπ„ÉàË°®Á§∫ÂÆå‰∫ÜÊôÇ„Å´Âëº„Å∞„Çå„Çã„Ç≥„Éº„É´„Éê„ÉÉ„ÇØ
 */
function showTextSlowly(text, speed = 100, outputElement, onComplete) {
  outputElement.textContent = '';
  let index = 0;

  // Êó¢Â≠ò interval „Åå„ÅÇ„Çå„Å∞„ÇØ„É™„Ç¢
  if (typingIntervalId !== null) {
    clearInterval(typingIntervalId);
    typingIntervalId = null;
  }

  typingIntervalId = setInterval(() => {
    if (index >= text.length) {
      clearInterval(typingIntervalId);
      typingIntervalId = null;
      if (typeof onComplete === 'function') onComplete();
      return;
    }
    outputElement.textContent += text[index];
    index++;
  }, speed);
}

function setCoolingState(isOn, buttonElement) {
  isCooling = isOn;
  if (buttonElement) buttonElement.disabled = !!isOn;

  let label = document.getElementById('cooldownLabel');
  if (!label) {
    label = document.createElement('span');
    label.id = 'cooldownLabel';
    label.style.marginLeft = '8px';
    if (buttonElement) buttonElement.insertAdjacentElement('afterend', label);
    else document.body.appendChild(label);
  }
  label.textContent = isOn ? ' (Ë°®Á§∫‰∏≠...)' : '';
}
